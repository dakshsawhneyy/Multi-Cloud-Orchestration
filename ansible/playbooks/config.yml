---
- name: Configure Instances
  hosts: all
  become: yes
  gather_facts: yes

  tasks:
    - name: Update package cache [Ubuntu]
      apt:
        update_cache: yes
      when: ansible_os_family == 'Ubuntu'

    - name: Install Nginx
      package:
        name: nginx
        state: present
    
    - name: Create Web Directory
      file:
        path: /var/www/daksh
        state: directory
        mode: '0755'

    - name: Deploy Web Page
      template:
        # .j2 means it can dynamically inject variables like {{ cloud_provider }} or instance metadata.
        src: ../templates/index.html.j2
        dest: /var/www/daksh/index.html
        mode: '0644'

    - name: Configure Nginx
      template:
        src: ../templates/nginx.conf.j2
        dest: /etc/nginx/conf.d/default.conf
      # if any change is detected, Ansible triggers a handler to restart NginX automatically
      notify: restart nginx

    # - name: Ensure nginx is started
    #   systemd:
    #     name: nginx
    #     state: started
    #     enabled: yes

    # - name: Remove existing Datadog agent if present
    #   package:
    #     name: datadog-agent
    #     state: absent
    #   ignore_errors: yes
    #   when: datadog_api_key is defined

    # - name: Clean Datadog configuration
    #   file:
    #     path: /etc/datadog-agent
    #     state: absent
    #   when: datadog_api_key is defined

    - name: Install Datadog Agent
      shell: |
        DD_API_KEY="{{ datadog_api_key }}" \
        DD_SITE="datadoghq.eu" \
        DD_HOSTNAME="{{ cloud_provider | lower }}-multi-cloud-orchestration" \
        DD_TAGS="cloud:{{ cloud_provider | lower }},provider:{{ cloud_provider | lower }},env:dev,project:multi-cloud-orchestration,service:web" \
        bash -c "$(curl -L https://s3.amazonaws.com/dd-agent/scripts/install_script_agent7.sh)"
      args:
        creates: /etc/datadog-agent/datadog.yaml
      when: datadog_api_key is defined
      notify: restart datadog-agent

    - name: Configure Datadog nginx monitoring
      copy:
        content: |
          init_config:
          instances:
            - nginx_status_url: http://localhost/nginx_status
        dest: /etc/datadog-agent/conf.d/nginx.d/conf.yaml
        owner: dd-agent
        group: dd-agent
      when: datadog_api_key is defined
      notify: restart datadog-agent

  handlers:
  # Runs only when notify: is triggered.
  - name: restart nginx
    systemd:
      name: nginx
      state: restarted
  - name: restart datadog-agent
    systemd:
      name: datadog-agent
      state: restarted